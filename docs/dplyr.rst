DataFramesMeta.jl for R's dplyr
=============
I'm going to use R's dplyr as basis for demonstrating the use of DataFramesMeta.jl.
We'll try to reproduce the example in this site_.

.. _site: https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html

Data: nycflights13
--------------
The data is available in the repository and we'll import this using the Request.jl_.

.. _Request.jl: https://github.com/JuliaWeb/Requests.jl

That is,

.. code-block:: julia

  using DataFrames
  using DataFramesMeta
  using Lazy
  using Requests

  url = "https://raw.githubusercontent.com/alstat/Julia-Data-Query/master/data-raw/flights.csv"

  flights = readtable(get_streaming(url));
  delete!(flights, :x);

We need to delete the column ``:x`` in the data frame since this is the index
and not a column of the original data. So that,

.. code-block:: julia

  size(flights)
  # (336776,20)
  head(flights)
  # 6×20 DataFrames.DataFrame
  # │ Row │ x │ year │ month │ day │ dep_time │ sched_dep_time │ dep_delay │
  # ├─────┼───┼──────┼───────┼─────┼──────────┼────────────────┼───────────┤
  # │ 1   │ 1 │ 2013 │ 1     │ 1   │ 517      │ 515            │ 2         │
  # │ 2   │ 2 │ 2013 │ 1     │ 1   │ 533      │ 529            │ 4         │
  # │ 3   │ 3 │ 2013 │ 1     │ 1   │ 542      │ 540            │ 2         │
  # │ 4   │ 4 │ 2013 │ 1     │ 1   │ 544      │ 545            │ -1        │
  # │ 5   │ 5 │ 2013 │ 1     │ 1   │ 554      │ 600            │ -6        │
  # │ 6   │ 6 │ 2013 │ 1     │ 1   │ 554      │ 558            │ -4        │
  #
  # │ Row │ arr_time │ sched_arr_time │ arr_delay │ carrier │ flight │ tailnum  │
  # ├─────┼──────────┼────────────────┼───────────┼─────────┼────────┼──────────┤
  # │ 1   │ 830      │ 819            │ 11        │ "UA"    │ 1545   │ "N14228" │
  # │ 2   │ 850      │ 830            │ 20        │ "UA"    │ 1714   │ "N24211" │
  # │ 3   │ 923      │ 850            │ 33        │ "AA"    │ 1141   │ "N619AA" │
  # │ 4   │ 1004     │ 1022           │ -18       │ "B6"    │ 725    │ "N804JB" │
  # │ 5   │ 812      │ 837            │ -25       │ "DL"    │ 461    │ "N668DN" │
  # │ 6   │ 740      │ 728            │ 12        │ "UA"    │ 1696   │ "N39463" │
  #
  # │ Row │ origin │ dest  │ air_time │ distance │ hour │ minute │
  # ├─────┼────────┼───────┼──────────┼──────────┼──────┼────────┤
  # │ 1   │ "EWR"  │ "IAH" │ 227      │ 1400     │ 5    │ 15     │
  # │ 2   │ "LGA"  │ "IAH" │ 227      │ 1416     │ 5    │ 29     │
  # │ 3   │ "JFK"  │ "MIA" │ 160      │ 1089     │ 5    │ 40     │
  # │ 4   │ "JFK"  │ "BQN" │ 183      │ 1576     │ 5    │ 45     │
  # │ 5   │ "LGA"  │ "ATL" │ 116      │ 762      │ 6    │ 0      │
  # │ 6   │ "EWR"  │ "ORD" │ 150      │ 719      │ 5    │ 58     │
  #
  # │ Row │ time_hour             │
  # ├─────┼───────────────────────┤
  # │ 1   │ "2013-01-01 05:00:00" │
  # │ 2   │ "2013-01-01 05:00:00" │
  # │ 3   │ "2013-01-01 05:00:00" │
  # │ 4   │ "2013-01-01 05:00:00" │
  # │ 5   │ "2013-01-01 06:00:00" │
  # │ 6   │ "2013-01-01 05:00:00" │

Single Table Verbs
-------------
The following are the equivalen of R dplyr's functions:

+---------------------------------------------------------------------+----------------------------------------+
| **DataFrames.jl** and **DataFramesMeta.jl**                         | **R dplyr**                            |
+=====================================================================+========================================+
| ``@where``                                                          | ``filter()`` (and ``slice()``)         |
+---------------------------------------------------------------------+----------------------------------------+
| ``@orderby``                                                        | ``arrange()``                          |
+---------------------------------------------------------------------+----------------------------------------+
| ``@select`` (and ``DataFrames.rename()``, ``DataFrames.rename!()``) | ``select()`` (and ``rename()``)        |
+---------------------------------------------------------------------+----------------------------------------+
| ``DataFrames.unique()`` and ``DataFrames.unique!()``                | ``distinct()``                         |
+---------------------------------------------------------------------+----------------------------------------+
| ``@transform``                                                      | ``mutate()`` (and ``transmute()``)     |
+---------------------------------------------------------------------+----------------------------------------+
| ``DataFrames.groupby()``                                            | ``group_by()``                         |
+---------------------------------------------------------------------+----------------------------------------+
| ``@based_on``                                                       | ``summarise()``                        |
+---------------------------------------------------------------------+----------------------------------------+
| possible but no function yet                                        | ``sample_n()`` (and ``sample_frac()``) |
+---------------------------------------------------------------------+----------------------------------------+

Filter Rows With @where
~~~~~~~~~~~~~~~
Subsetting the data according to some conditions is done using the macro ``@where``.
The first argument is the DataFrame and the succeeding arguments are the conditions
set on the rows of the columns of the DataFrame.

.. code-block:: julia

  @where flights (:month .== 1) (:day .== 1) # or @where(flights, :month .== 1, :day .== 1)
  # 842×19 DataFrames.DataFrame
  # │ Row │ year │ month │ day │ dep_time │ sched_dep_time │ dep_delay │ arr_time │
  # ├─────┼──────┼───────┼─────┼──────────┼────────────────┼───────────┼──────────┤
  # │ 1   │ 2013 │ 1     │ 1   │ 517      │ 515            │ 2         │ 830      │
  # │ 2   │ 2013 │ 1     │ 1   │ 533      │ 529            │ 4         │ 850      │
  # │ 3   │ 2013 │ 1     │ 1   │ 542      │ 540            │ 2         │ 923      │
  # │ 4   │ 2013 │ 1     │ 1   │ 544      │ 545            │ -1        │ 1004     │
  # │ 5   │ 2013 │ 1     │ 1   │ 554      │ 600            │ -6        │ 812      │
  # │ 6   │ 2013 │ 1     │ 1   │ 554      │ 558            │ -4        │ 740      │
  # │ 7   │ 2013 │ 1     │ 1   │ 555      │ 600            │ -5        │ 913      │
  # │ 8   │ 2013 │ 1     │ 1   │ 557      │ 600            │ -3        │ 709      │
  # ⋮
  # │ 834 │ 2013 │ 1     │ 1   │ 2327     │ 2250           │ 37        │ 32       │
  # │ 835 │ 2013 │ 1     │ 1   │ 2343     │ 1724           │ 379       │ 314      │
  # │ 836 │ 2013 │ 1     │ 1   │ 2353     │ 2359           │ -6        │ 425      │
  # │ 837 │ 2013 │ 1     │ 1   │ 2353     │ 2359           │ -6        │ 418      │
  # │ 838 │ 2013 │ 1     │ 1   │ 2356     │ 2359           │ -3        │ 425      │
  # │ 839 │ 2013 │ 1     │ 1   │ NA       │ 1630           │ NA        │ NA       │
  # │ 840 │ 2013 │ 1     │ 1   │ NA       │ 1935           │ NA        │ NA       │
  # │ 841 │ 2013 │ 1     │ 1   │ NA       │ 1500           │ NA        │ NA       │
  # │ 842 │ 2013 │ 1     │ 1   │ NA       │ 600            │ NA        │ NA       │
  #
  # │ Row │ sched_arr_time │ arr_delay │ carrier │ flight │ tailnum  │ origin │
  # ├─────┼────────────────┼───────────┼─────────┼────────┼──────────┼────────┤
  # │ 1   │ 819            │ 11        │ "UA"    │ 1545   │ "N14228" │ "EWR"  │
  # │ 2   │ 830            │ 20        │ "UA"    │ 1714   │ "N24211" │ "LGA"  │
  # │ 3   │ 850            │ 33        │ "AA"    │ 1141   │ "N619AA" │ "JFK"  │
  # │ 4   │ 1022           │ -18       │ "B6"    │ 725    │ "N804JB" │ "JFK"  │
  # │ 5   │ 837            │ -25       │ "DL"    │ 461    │ "N668DN" │ "LGA"  │
  # │ 6   │ 728            │ 12        │ "UA"    │ 1696   │ "N39463" │ "EWR"  │
  # │ 7   │ 854            │ 19        │ "B6"    │ 507    │ "N516JB" │ "EWR"  │
  # │ 8   │ 723            │ -14       │ "EV"    │ 5708   │ "N829AS" │ "LGA"  │
  # ⋮
  # │ 834 │ 2359           │ 33        │ "B6"    │ 22     │ "N639JB" │ "JFK"  │
  # │ 835 │ 1938           │ 456       │ "EV"    │ 4321   │ "N21197" │ "EWR"  │
  # │ 836 │ 445            │ -20       │ "B6"    │ 739    │ "N591JB" │ "JFK"  │
  # │ 837 │ 442            │ -24       │ "B6"    │ 707    │ "N794JB" │ "JFK"  │
  # │ 838 │ 437            │ -12       │ "B6"    │ 727    │ "N588JB" │ "JFK"  │
  # │ 839 │ 1815           │ NA        │ "EV"    │ 4308   │ "N18120" │ "EWR"  │
  # │ 840 │ 2240           │ NA        │ "AA"    │ 791    │ "N3EHAA" │ "LGA"  │
  # │ 841 │ 1825           │ NA        │ "AA"    │ 1925   │ "N3EVAA" │ "LGA"  │
  # │ 842 │ 901            │ NA        │ "B6"    │ 125    │ "N618JB" │ "JFK"  │
  #
  # │ Row │ dest  │ air_time │ distance │ hour │ minute │ time_hour             │
  # ├─────┼───────┼──────────┼──────────┼──────┼────────┼───────────────────────┤
  # │ 1   │ "IAH" │ 227      │ 1400     │ 5    │ 15     │ "2013-01-01 05:00:00" │
  # │ 2   │ "IAH" │ 227      │ 1416     │ 5    │ 29     │ "2013-01-01 05:00:00" │
  # │ 3   │ "MIA" │ 160      │ 1089     │ 5    │ 40     │ "2013-01-01 05:00:00" │
  # │ 4   │ "BQN" │ 183      │ 1576     │ 5    │ 45     │ "2013-01-01 05:00:00" │
  # │ 5   │ "ATL" │ 116      │ 762      │ 6    │ 0      │ "2013-01-01 06:00:00" │
  # │ 6   │ "ORD" │ 150      │ 719      │ 5    │ 58     │ "2013-01-01 05:00:00" │
  # │ 7   │ "FLL" │ 158      │ 1065     │ 6    │ 0      │ "2013-01-01 06:00:00" │
  # │ 8   │ "IAD" │ 53       │ 229      │ 6    │ 0      │ "2013-01-01 06:00:00" │
  # ⋮
  # │ 834 │ "SYR" │ 45       │ 209      │ 22   │ 50     │ "2013-01-01 22:00:00" │
  # │ 835 │ "MCI" │ 222      │ 1092     │ 17   │ 24     │ "2013-01-01 17:00:00" │
  # │ 836 │ "PSE" │ 195      │ 1617     │ 23   │ 59     │ "2013-01-01 23:00:00" │
  # │ 837 │ "SJU" │ 185      │ 1598     │ 23   │ 59     │ "2013-01-01 23:00:00" │
  # │ 838 │ "BQN" │ 186      │ 1576     │ 23   │ 59     │ "2013-01-01 23:00:00" │
  # │ 839 │ "RDU" │ NA       │ 416      │ 16   │ 30     │ "2013-01-01 16:00:00" │
  # │ 840 │ "DFW" │ NA       │ 1389     │ 19   │ 35     │ "2013-01-01 19:00:00" │
  # │ 841 │ "MIA" │ NA       │ 1096     │ 15   │ 0      │ "2013-01-01 15:00:00" │
  # │ 842 │ "FLL" │ NA       │ 1069     │ 6    │ 0      │ "2013-01-01 06:00:00" │

This is equivalent to the more verbose code in base Julia's DataFrame:

.. code-block:: julia

  flights[(flights[:month] .== 1) & (flights[:day] .== 1), :]

You can also use other boolean operators:

.. code-block:: julia

  @where flights ((:month .== 1) | (:month .== 2)) # or @where(flights, (:month .== 1) | (:month .== 2))
  # 51955×19 DataFrames.DataFrame
  # │ Row   │ year │ month │ day │ dep_time │ sched_dep_time │ dep_delay │
  # ├───────┼──────┼───────┼─────┼──────────┼────────────────┼───────────┤
  # │ 1     │ 2013 │ 1     │ 1   │ 517      │ 515            │ 2         │
  # │ 2     │ 2013 │ 1     │ 1   │ 533      │ 529            │ 4         │
  # │ 3     │ 2013 │ 1     │ 1   │ 542      │ 540            │ 2         │
  # │ 4     │ 2013 │ 1     │ 1   │ 544      │ 545            │ -1        │
  # │ 5     │ 2013 │ 1     │ 1   │ 554      │ 600            │ -6        │
  # │ 6     │ 2013 │ 1     │ 1   │ 554      │ 558            │ -4        │
  # │ 7     │ 2013 │ 1     │ 1   │ 555      │ 600            │ -5        │
  # │ 8     │ 2013 │ 1     │ 1   │ 557      │ 600            │ -3        │
  # ⋮
  # │ 51947 │ 2013 │ 2     │ 28  │ NA       │ 1820           │ NA        │
  # │ 51948 │ 2013 │ 2     │ 28  │ NA       │ 1154           │ NA        │
  # │ 51949 │ 2013 │ 2     │ 28  │ NA       │ 900            │ NA        │
  # │ 51950 │ 2013 │ 2     │ 28  │ NA       │ 605            │ NA        │
  # │ 51951 │ 2013 │ 2     │ 28  │ NA       │ 850            │ NA        │
  # │ 51952 │ 2013 │ 2     │ 28  │ NA       │ 905            │ NA        │
  # │ 51953 │ 2013 │ 2     │ 28  │ NA       │ 1115           │ NA        │
  # │ 51954 │ 2013 │ 2     │ 28  │ NA       │ 830            │ NA        │
  # │ 51955 │ 2013 │ 2     │ 28  │ NA       │ 840            │ NA        │
  #
  # │ Row   │ arr_time │ sched_arr_time │ arr_delay │ carrier │ flight │ tailnum  │
  # ├───────┼──────────┼────────────────┼───────────┼─────────┼────────┼──────────┤
  # │ 1     │ 830      │ 819            │ 11        │ "UA"    │ 1545   │ "N14228" │
  # │ 2     │ 850      │ 830            │ 20        │ "UA"    │ 1714   │ "N24211" │
  # │ 3     │ 923      │ 850            │ 33        │ "AA"    │ 1141   │ "N619AA" │
  # │ 4     │ 1004     │ 1022           │ -18       │ "B6"    │ 725    │ "N804JB" │
  # │ 5     │ 812      │ 837            │ -25       │ "DL"    │ 461    │ "N668DN" │
  # │ 6     │ 740      │ 728            │ 12        │ "UA"    │ 1696   │ "N39463" │
  # │ 7     │ 913      │ 854            │ 19        │ "B6"    │ 507    │ "N516JB" │
  # │ 8     │ 709      │ 723            │ -14       │ "EV"    │ 5708   │ "N829AS" │
  # ⋮
  # │ 51947 │ NA       │ 2003           │ NA        │ "EV"    │ 5409   │ "N740EV" │
  # │ 51948 │ NA       │ 1447           │ NA        │ "B6"    │ 27     │ "N274JB" │
  # │ 51949 │ NA       │ 1020           │ NA        │ "US"    │ 2120   │ NA       │
  # │ 51950 │ NA       │ 805            │ NA        │ "MQ"    │ 4401   │ "N730MQ" │
  # │ 51951 │ NA       │ 1035           │ NA        │ "MQ"    │ 4558   │ "N737MQ" │
  # │ 51952 │ NA       │ 1115           │ NA        │ "MQ"    │ 4478   │ "N722MQ" │
  # │ 51953 │ NA       │ 1310           │ NA        │ "MQ"    │ 4485   │ "N725MQ" │
  # │ 51954 │ NA       │ 1205           │ NA        │ "UA"    │ 1480   │ NA       │
  # │ 51955 │ NA       │ 1147           │ NA        │ "UA"    │ 443    │ NA       │
  #
  # │ Row   │ origin │ dest  │ air_time │ distance │ hour │ minute │
  # ├───────┼────────┼───────┼──────────┼──────────┼──────┼────────┤
  # │ 1     │ "EWR"  │ "IAH" │ 227      │ 1400     │ 5    │ 15     │
  # │ 2     │ "LGA"  │ "IAH" │ 227      │ 1416     │ 5    │ 29     │
  # │ 3     │ "JFK"  │ "MIA" │ 160      │ 1089     │ 5    │ 40     │
  # │ 4     │ "JFK"  │ "BQN" │ 183      │ 1576     │ 5    │ 45     │
  # │ 5     │ "LGA"  │ "ATL" │ 116      │ 762      │ 6    │ 0      │
  # │ 6     │ "EWR"  │ "ORD" │ 150      │ 719      │ 5    │ 58     │
  # │ 7     │ "EWR"  │ "FLL" │ 158      │ 1065     │ 6    │ 0      │
  # │ 8     │ "LGA"  │ "IAD" │ 53       │ 229      │ 6    │ 0      │
  # ⋮
  # │ 51947 │ "LGA"  │ "MSN" │ NA       │ 812      │ 18   │ 20     │
  # │ 51948 │ "JFK"  │ "TPA" │ NA       │ 1005     │ 11   │ 54     │
  # │ 51949 │ "LGA"  │ "BOS" │ NA       │ 184      │ 9    │ 0      │
  # │ 51950 │ "LGA"  │ "DTW" │ NA       │ 502      │ 6    │ 5      │
  # │ 51951 │ "LGA"  │ "CLE" │ NA       │ 419      │ 8    │ 50     │
  # │ 51952 │ "LGA"  │ "DTW" │ NA       │ 502      │ 9    │ 5      │
  # │ 51953 │ "LGA"  │ "CMH" │ NA       │ 479      │ 11   │ 15     │
  # │ 51954 │ "EWR"  │ "SFO" │ NA       │ 2565     │ 8    │ 30     │
  # │ 51955 │ "JFK"  │ "LAX" │ NA       │ 2475     │ 8    │ 40     │
  #
  # │ Row   │ time_hour             │
  # ├───────┼───────────────────────┤
  # │ 1     │ "2013-01-01 05:00:00" │
  # │ 2     │ "2013-01-01 05:00:00" │
  # │ 3     │ "2013-01-01 05:00:00" │
  # │ 4     │ "2013-01-01 05:00:00" │
  # │ 5     │ "2013-01-01 06:00:00" │
  # │ 6     │ "2013-01-01 05:00:00" │
  # │ 7     │ "2013-01-01 06:00:00" │
  # │ 8     │ "2013-01-01 06:00:00" │
  # ⋮
  # │ 51947 │ "2013-02-28 18:00:00" │
  # │ 51948 │ "2013-02-28 11:00:00" │
  # │ 51949 │ "2013-02-28 09:00:00" │
  # │ 51950 │ "2013-02-28 06:00:00" │
  # │ 51951 │ "2013-02-28 08:00:00" │
  # │ 51952 │ "2013-02-28 09:00:00" │
  # │ 51953 │ "2013-02-28 11:00:00" │
  # │ 51954 │ "2013-02-28 08:00:00" │
  # │ 51955 │ "2013-02-28 08:00:00" │

To select rows by position, simply do the following:

.. code-block:: julia

  @where flights 1:10
  # 10×19 DataFrames.DataFrame
  # │ Row │ year │ month │ day │ dep_time │ sched_dep_time │ dep_delay │ arr_time │
  # ├─────┼──────┼───────┼─────┼──────────┼────────────────┼───────────┼──────────┤
  # │ 1   │ 2013 │ 1     │ 1   │ 517      │ 515            │ 2         │ 830      │
  # │ 2   │ 2013 │ 1     │ 1   │ 533      │ 529            │ 4         │ 850      │
  # │ 3   │ 2013 │ 1     │ 1   │ 542      │ 540            │ 2         │ 923      │
  # │ 4   │ 2013 │ 1     │ 1   │ 544      │ 545            │ -1        │ 1004     │
  # │ 5   │ 2013 │ 1     │ 1   │ 554      │ 600            │ -6        │ 812      │
  # │ 6   │ 2013 │ 1     │ 1   │ 554      │ 558            │ -4        │ 740      │
  # │ 7   │ 2013 │ 1     │ 1   │ 555      │ 600            │ -5        │ 913      │
  # │ 8   │ 2013 │ 1     │ 1   │ 557      │ 600            │ -3        │ 709      │
  # │ 9   │ 2013 │ 1     │ 1   │ 557      │ 600            │ -3        │ 838      │
  # │ 10  │ 2013 │ 1     │ 1   │ 558      │ 600            │ -2        │ 753      │
  #
  # │ Row │ sched_arr_time │ arr_delay │ carrier │ flight │ tailnum  │ origin │
  # ├─────┼────────────────┼───────────┼─────────┼────────┼──────────┼────────┤
  # │ 1   │ 819            │ 11        │ "UA"    │ 1545   │ "N14228" │ "EWR"  │
  # │ 2   │ 830            │ 20        │ "UA"    │ 1714   │ "N24211" │ "LGA"  │
  # │ 3   │ 850            │ 33        │ "AA"    │ 1141   │ "N619AA" │ "JFK"  │
  # │ 4   │ 1022           │ -18       │ "B6"    │ 725    │ "N804JB" │ "JFK"  │
  # │ 5   │ 837            │ -25       │ "DL"    │ 461    │ "N668DN" │ "LGA"  │
  # │ 6   │ 728            │ 12        │ "UA"    │ 1696   │ "N39463" │ "EWR"  │
  # │ 7   │ 854            │ 19        │ "B6"    │ 507    │ "N516JB" │ "EWR"  │
  # │ 8   │ 723            │ -14       │ "EV"    │ 5708   │ "N829AS" │ "LGA"  │
  # │ 9   │ 846            │ -8        │ "B6"    │ 79     │ "N593JB" │ "JFK"  │
  # │ 10  │ 745            │ 8         │ "AA"    │ 301    │ "N3ALAA" │ "LGA"  │
  #
  # │ Row │ dest  │ air_time │ distance │ hour │ minute │ time_hour             │
  # ├─────┼───────┼──────────┼──────────┼──────┼────────┼───────────────────────┤
  # │ 1   │ "IAH" │ 227      │ 1400     │ 5    │ 15     │ "2013-01-01 05:00:00" │
  # │ 2   │ "IAH" │ 227      │ 1416     │ 5    │ 29     │ "2013-01-01 05:00:00" │
  # │ 3   │ "MIA" │ 160      │ 1089     │ 5    │ 40     │ "2013-01-01 05:00:00" │
  # │ 4   │ "BQN" │ 183      │ 1576     │ 5    │ 45     │ "2013-01-01 05:00:00" │
  # │ 5   │ "ATL" │ 116      │ 762      │ 6    │ 0      │ "2013-01-01 06:00:00" │
  # │ 6   │ "ORD" │ 150      │ 719      │ 5    │ 58     │ "2013-01-01 05:00:00" │
  # │ 7   │ "FLL" │ 158      │ 1065     │ 6    │ 0      │ "2013-01-01 06:00:00" │
  # │ 8   │ "IAD" │ 53       │ 229      │ 6    │ 0      │ "2013-01-01 06:00:00" │
  # │ 9   │ "MCO" │ 140      │ 944      │ 6    │ 0      │ "2013-01-01 06:00:00" │
  # │ 10  │ "ORD" │ 138      │ 733      │ 6    │ 0      │ "2013-01-01 06:00:00" │

Arrange Rows With @orderby
~~~~~~~~~~~~~~~
