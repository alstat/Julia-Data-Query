DataFramesMeta.jl for R's dplyr
=============
I'm going to use R's dplyr as basis for demonstrating the use of DataFramesMeta.jl.
We'll try to reproduce the example in this site_.

.. _site: https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html

Data: nycflights13
--------------
The data is available in the repository and we'll import this using the Request.jl_.

.. _Request.jl: https://github.com/JuliaWeb/Requests.jl

That is,

.. code-block:: julia

  using DataFrames
  using DataFramesMeta
  using Lazy
  using Requests

  url = "https://raw.githubusercontent.com/alstat/Julia-Data-Query/master/data-raw/flights.csv"

  flights = readtable(get_streaming(url));
  delete!(flights, :x);

We need to delete the column ``:x`` in the data frame since this is the index
and not a column of the original data. So that,

.. code-block:: julia

  size(flights)
  # (336776,20)
  head(flights)
  # 6×20 DataFrames.DataFrame
  # │ Row │ x │ year │ month │ day │ dep_time │ sched_dep_time │ dep_delay │
  # ├─────┼───┼──────┼───────┼─────┼──────────┼────────────────┼───────────┤
  # │ 1   │ 1 │ 2013 │ 1     │ 1   │ 517      │ 515            │ 2         │
  # │ 2   │ 2 │ 2013 │ 1     │ 1   │ 533      │ 529            │ 4         │
  # │ 3   │ 3 │ 2013 │ 1     │ 1   │ 542      │ 540            │ 2         │
  # │ 4   │ 4 │ 2013 │ 1     │ 1   │ 544      │ 545            │ -1        │
  # │ 5   │ 5 │ 2013 │ 1     │ 1   │ 554      │ 600            │ -6        │
  # │ 6   │ 6 │ 2013 │ 1     │ 1   │ 554      │ 558            │ -4        │
  #
  # │ Row │ arr_time │ sched_arr_time │ arr_delay │ carrier │ flight │ tailnum  │
  # ├─────┼──────────┼────────────────┼───────────┼─────────┼────────┼──────────┤
  # │ 1   │ 830      │ 819            │ 11        │ "UA"    │ 1545   │ "N14228" │
  # │ 2   │ 850      │ 830            │ 20        │ "UA"    │ 1714   │ "N24211" │
  # │ 3   │ 923      │ 850            │ 33        │ "AA"    │ 1141   │ "N619AA" │
  # │ 4   │ 1004     │ 1022           │ -18       │ "B6"    │ 725    │ "N804JB" │
  # │ 5   │ 812      │ 837            │ -25       │ "DL"    │ 461    │ "N668DN" │
  # │ 6   │ 740      │ 728            │ 12        │ "UA"    │ 1696   │ "N39463" │
  #
  # │ Row │ origin │ dest  │ air_time │ distance │ hour │ minute │
  # ├─────┼────────┼───────┼──────────┼──────────┼──────┼────────┤
  # │ 1   │ "EWR"  │ "IAH" │ 227      │ 1400     │ 5    │ 15     │
  # │ 2   │ "LGA"  │ "IAH" │ 227      │ 1416     │ 5    │ 29     │
  # │ 3   │ "JFK"  │ "MIA" │ 160      │ 1089     │ 5    │ 40     │
  # │ 4   │ "JFK"  │ "BQN" │ 183      │ 1576     │ 5    │ 45     │
  # │ 5   │ "LGA"  │ "ATL" │ 116      │ 762      │ 6    │ 0      │
  # │ 6   │ "EWR"  │ "ORD" │ 150      │ 719      │ 5    │ 58     │
  #
  # │ Row │ time_hour             │
  # ├─────┼───────────────────────┤
  # │ 1   │ "2013-01-01 05:00:00" │
  # │ 2   │ "2013-01-01 05:00:00" │
  # │ 3   │ "2013-01-01 05:00:00" │
  # │ 4   │ "2013-01-01 05:00:00" │
  # │ 5   │ "2013-01-01 06:00:00" │
  # │ 6   │ "2013-01-01 05:00:00" │

Single Table Verbs
-------------
The following are the equivalen of R dplyr's functions:
+-----------------------------------------------+----------------------------------------+
| **DataFramesMeta.jl**                         | **R dplyr**                            |
+===============================================+========================================+
| ``@where`` (and ``@ix``)                      | ``filter()`` (and ``slice()``)         |
+-----------------------------------------------+----------------------------------------+
| ``@orderby``                                  | ``arrange()``                          |
+-----------------------------------------------+----------------------------------------+
| ``@select`` (and ``rename()``, ``rename!()``) | ``select()`` (and ``rename()``)        |
+-----------------------------------------------+----------------------------------------+
| ``unique()`` and ``unique!()``                | ``distinct()``                         |
+-----------------------------------------------+----------------------------------------+
| ``@transform``                                | ``mutate()`` (and ``transmute()``)     |
+-----------------------------------------------+----------------------------------------+
| ``DataFrames.groupby()``                      | ``group_by()``                         |
+-----------------------------------------------+----------------------------------------+
| ``@based_on``                                 | ``summarise()``                        |
+-----------------------------------------------+----------------------------------------+
| possible but no function                      | ``sample_n()`` (and ``sample_frac()``) |
+-----------------------------------------------+----------------------------------------+

+===============================================+========================================+
| **DataFramesMeta.jl**                         | **R dplyr**                            |
+===============================================+========================================+
| ``@where`` (and ``@ix``)                      | ``filter()`` (and ``slice()``)         |
+-----------------------------------------------+----------------------------------------+
| ``@orderby``                                  | ``arrange()``                          |
+-----------------------------------------------+----------------------------------------+
| ``@select`` (and ``rename()``, ``rename!()``) | ``select()`` (and ``rename()``)        |
+-----------------------------------------------+----------------------------------------+
| ``unique()`` and ``unique!()``                | ``distinct()``                         |
+-----------------------------------------------+----------------------------------------+
| ``@transform``                                | ``mutate()`` (and ``transmute()``)     |
+-----------------------------------------------+----------------------------------------+
| ``DataFrames.groupby()``                      | ``group_by()``                         |
+-----------------------------------------------+----------------------------------------+
| ``@based_on``                                 | ``summarise()``                        |
+-----------------------------------------------+----------------------------------------+
| possible but no function                      | ``sample_n()`` (and ``sample_frac()``) |
+-----------------------------------------------+----------------------------------------+

Filter Rows with @where
~~~~~~~~~~~~~~~
